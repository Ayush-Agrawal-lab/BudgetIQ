{"version":3,"sources":["service-worker.js"],"names":["importScripts","workbox","core","clientsClaim","precaching","precacheAndRoute","self","__WB_MANIFEST","routing","registerRoute","strategies","StaleWhileRevalidate","cacheName","CacheFirst","addEventListener","event","data","type","skipWaiting"],"mappings":"AAMA,cAAc,2EAEd,QAAQ,KAAK,eAGb,QAAQ,WAAW,iBAAiB,0SAAK,eAAiB,IAG1D,QAAQ,QAAQ,cACd,oCACA,IAAI,QAAQ,WAAW,qBAAqB,CAC1C,UAAW,8BAKf,QAAQ,QAAQ,cACd,iCACA,IAAI,QAAQ,WAAW,WAAW,CAChC,UAAW,2BAKf,QAAQ,QAAQ,cAEd,kCACA,IAAI,QAAQ,WAAW,WAAW,CAChC,UAAW,YAKf,QAAQ,QAAQ,cACd,gBACA,IAAI,QAAQ,WAAW,qBAAqB,CAC1C,UAAW,sBAMf,KAAK,iBAAiB,UAAY,IAC5B,EAAM,MAA4B,iBAApB,EAAM,KAAK,MAC3B,KAAK","file":"service-worker.js","sourceRoot":"","sourcesContent":["/* eslint-disable no-restricted-globals */\n/* eslint-disable no-underscore-dangle */\n\n// This is the service worker for the BudgetIQ application\n\n// These imports will be injected by Workbox during build\nimportScripts('https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-sw.js');\n\nworkbox.core.clientsClaim();\n\n// Precache all of the assets generated by your build process.\nworkbox.precaching.precacheAndRoute(self.__WB_MANIFEST || []);\n\n// Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.\nworkbox.routing.registerRoute(\n  /^https:\\/\\/fonts\\.googleapis\\.com/,\n  new workbox.strategies.StaleWhileRevalidate({\n    cacheName: 'google-fonts-stylesheets',\n  })\n);\n\n// Cache the underlying font files with a cache-first strategy for 1 year.\nworkbox.routing.registerRoute(\n  /^https:\\/\\/fonts\\.gstatic\\.com/,\n  new workbox.strategies.CacheFirst({\n    cacheName: 'google-fonts-webfonts'\n  })\n);\n\n// Cache static assets with a cache-first strategy\nworkbox.routing.registerRoute(\n  // Add in any other file extensions or routing criteria as needed:\n  /\\.(?:png|gif|jpg|jpeg|svg|ico)$/,\n  new workbox.strategies.CacheFirst({\n    cacheName: 'images',\n  })\n);\n\n// Cache JavaScript and CSS with a stale-while-revalidate strategy\nworkbox.routing.registerRoute(\n  /\\.(?:js|css)$/,\n  new workbox.strategies.StaleWhileRevalidate({\n    cacheName: 'static-resources',\n  })\n);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});"]}