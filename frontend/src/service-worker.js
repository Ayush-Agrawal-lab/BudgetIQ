/* eslint-disable no-restricted-globals */
/* eslint-disable no-underscore-dangle */

// This is the service worker for the BudgetIQ application

// These imports will be injected by Workbox during build
importScripts('https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-sw.js');

workbox.core.clientsClaim();

// Precache all of the assets generated by your build process.
workbox.precaching.precacheAndRoute(self.__WB_MANIFEST || []);

// Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.
workbox.routing.registerRoute(
  /^https:\/\/fonts\.googleapis\.com/,
  new workbox.strategies.StaleWhileRevalidate({
    cacheName: 'google-fonts-stylesheets',
  })
);

// Cache the underlying font files with a cache-first strategy for 1 year.
workbox.routing.registerRoute(
  /^https:\/\/fonts\.gstatic\.com/,
  new workbox.strategies.CacheFirst({
    cacheName: 'google-fonts-webfonts'
  })
);

// Cache static assets with a cache-first strategy
workbox.routing.registerRoute(
  // Add in any other file extensions or routing criteria as needed:
  /\.(?:png|gif|jpg|jpeg|svg|ico)$/,
  new workbox.strategies.CacheFirst({
    cacheName: 'images',
  })
);

// Cache JavaScript and CSS with a stale-while-revalidate strategy
workbox.routing.registerRoute(
  /\.(?:js|css)$/,
  new workbox.strategies.StaleWhileRevalidate({
    cacheName: 'static-resources',
  })
);

// This allows the web app to trigger skipWaiting via
// registration.waiting.postMessage({type: 'SKIP_WAITING'})
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    self.skipWaiting();
  }
});